{"ast":null,"code":"var _jsxFileName = \"/home/yogita/Documents/reactrepo1/src/Postreq1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Postreq1() {\n  _s();\n  const [id, setId] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [data, setData] = useState([]);\n  const addData = () => {\n    const params = {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id,\n        title,\n        body\n      })\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", params).then(res => res.json()).then(() => console.log(\"response\" + id + title + body));\n  };\n  function showData() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\").then(res => res.json()).then(data => setData(data));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST REQUEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), \"ID\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), \"TITLE\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \"BODY\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"add\",\n      onClick: () => addData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"showData\",\n      onClick: () => setshow(true),\n      children: \"kfhjfufyur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), show ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"tableId\",\n          border: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TITLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), data.map(filtering => {\n            const {\n              userId,\n              id,\n              title,\n              body\n            } = filtering;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: body.slice(0, 50).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false)\n    }, void 0, false) : null]\n  }, void 0, true);\n}\n_s(Postreq1, \"JfOt2wF3Sp0qbTt0BC1/T4VOjdQ=\");\n_c = Postreq1;\nexport default Postreq1;\nvar _c;\n$RefreshReg$(_c, \"Postreq1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Postreq1","_s","id","setId","title","setTitle","body","setBody","data","setData","addData","params","method","headers","JSON","stringify","fetch","then","res","json","console","log","showData","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","setshow","show","border","map","filtering","userId","slice","toUpperCase","_c","$RefreshReg$"],"sources":["/home/yogita/Documents/reactrepo1/src/Postreq1.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Postreq1() {\n  const [id, setId] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [data, setData] = useState([]);\n  const addData = () => {\n    const params = {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ id, title, body }),\n    };\n    fetch(\"https://jsonplaceholder.typicode.com/posts\", params)\n      .then((res) => res.json())\n      .then(() => console.log(\"response\" + id + title + body));\n  };\n\n  function showData() {\n    fetch(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((res) => res.json())\n      .then((data) => setData(data));\n  \n  }\n\n  return (\n    <>\n      <h2>POST REQUEST</h2>\n      ID\n      <input type=\"text\" value={id} onChange={(e) => setId(e.target.value)} />\n      <br />\n      <br />\n      TITLE\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <br />\n      <br />\n      BODY\n      <input\n        type=\"text\"\n        value={body}\n        onChange={(e) => setBody(e.target.value)}\n      />\n      <br />\n      <br />\n      <button value=\"add\" onClick={() => addData()}></button>\n      <button value=\"showData\" onClick={() => setshow(true)}>\n        kfhjfufyur\n      </button>\n      {show?     <>\n        <>\n          <table id=\"tableId\" border={2}>\n            <tr>\n              <th>ID</th>\n              <th>TITLE</th>\n              <th>body</th>\n              <th>Button</th>\n            </tr>\n\n            {data.map((filtering) => {\n              const { userId, id, title, body } = filtering;\n              return (\n                <>\n                  <tr>\n                    <td>{id}</td>\n                    <td>{title}</td>\n                    <td>{body.slice(0, 50).toUpperCase()}</td>\n                  </tr>\n                </>\n              );\n            })}\n          </table>\n        </>\n      </>:null}\n    </>\n  );\n}\nexport default Postreq1;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}