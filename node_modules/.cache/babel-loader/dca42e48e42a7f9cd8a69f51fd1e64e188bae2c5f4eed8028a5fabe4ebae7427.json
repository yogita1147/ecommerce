{"ast":null,"code":"var _jsxFileName = \"/home/yogita/Documents/reactrepo1/src/Postreq1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Postreq1() {\n  _s();\n  const [id, setId] = useState();\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const [data, setData] = useState([]);\n  const addData = () => {\n    const params = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        title,\n        body\n      })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', params).then(res => res.json()).then(() => console.log('response' + id + title + body));\n  };\n  function showData() {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(res => res.json()).then(data => setData(data));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          id: \"tableId\",\n          border: 2,\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TITLE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 20\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 20\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 16\n          }, this), data.map(filtering => {\n            const {\n              userId,\n              id,\n              title,\n              body\n            } = filtering;\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 20\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: body.slice(0, 50).toUpperCase()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 16\n              }, this)\n            }, void 0, false);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST REQUEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), \"ID\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onChange: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 76\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 81\n    }, this), \"TITLE\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 85\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 90\n    }, this), \"BODY\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: body,\n      onChange: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 82\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 87\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"add\",\n      onClick: () => addData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      value: \"showData\",\n      onClick: () => showData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Postreq1, \"b7amAFXgVFiXQFtoYJhEcL2wiXk=\");\n_c = Postreq1;\nexport default Postreq1;\nvar _c;\n$RefreshReg$(_c, \"Postreq1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Postreq1","_s","id","setId","title","setTitle","body","setBody","data","setData","addData","params","method","headers","JSON","stringify","fetch","then","res","json","console","log","showData","children","border","fileName","_jsxFileName","lineNumber","columnNumber","map","filtering","userId","slice","toUpperCase","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/yogita/Documents/reactrepo1/src/Postreq1.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Postreq1()\n{\n    const [id,setId]=useState();\n    const  [title,setTitle]=useState(\"\");\n    const [body,setBody]=useState(\"\");\n    const [data,setData]=useState([]);\n    const addData=()=>{\n        const params={\n            method:'post',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({id,title,body}),\n\n        }\n        fetch('https://jsonplaceholder.typicode.com/posts',params).then(res=>res.json()).then(()=>console.log('response'+id+title+body));\n\n    }\n\n    function showData()\n    {\n        fetch('https://jsonplaceholder.typicode.com/posts').then(res=>res.json()).then((data)=>setData(data));\n        return(\n            <>\n            <>\n            <table id='tableId' border={2}>\n               <tr >\n                \n                   <th>ID</th>\n                   <th>TITLE</th>\n                   <th>body</th>\n                   <th>Button</th>\n               </tr>\n        \n           {data.map((filtering)=>{\n           const {userId,id,title,body}=filtering;\n           return(\n               <>\n               <tr><td>{id}</td><td>{title}</td><td>{body.slice(0,50).toUpperCase()}</td></tr></>)\n           })}\n           </table>\n           </>\n            </>\n        )\n    }\n    \nreturn (\n    <>\n    <h2>POST REQUEST</h2>\n    ID<input type=\"text\" value={id} onChange={(e)=>setId(e.target.value)}/><br/><br/>\n    TITLE<input type=\"text\" value={title} onChange={(e)=>setTitle(e.target.value)}/><br/><br/>\n    BODY<input type=\"text\" value={body} onChange={(e)=>setBody(e.target.value)}/><br/><br/>\n    <button  value=\"add\" onClick={()=>addData()}></button>\n    <button  value=\"showData\" onClick={()=>showData()}></button>\n    </>\n)\n\n}\nexport default Postreq1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}