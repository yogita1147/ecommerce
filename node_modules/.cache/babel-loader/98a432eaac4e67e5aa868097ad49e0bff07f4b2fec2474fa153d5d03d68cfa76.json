{"ast":null,"code":"var _jsxFileName = \"/home/yogita/Documents/reactrepo1/src/FetchData.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FetchData() {\n  _s();\n  const [data, setData] = useState([]);\n  let url = 'https://jsonplaceholder.typicode.com/posts';\n  fetch(url).then(response => response.json()).then(fetchData => setData(fetchData));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"TITLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"BODY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: data.map(filtered => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: filtered.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: filtered.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: filtered.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 13\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(FetchData, \"ZhdFFZzxrIZ1AkLU34uuoZfaEnY=\");\n_c = FetchData;\nexport default FetchData;\nvar _c;\n$RefreshReg$(_c, \"FetchData\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","FetchData","_s","data","setData","url","fetch","then","response","json","fetchData","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filtered","id","title","body","_c","$RefreshReg$"],"sources":["/home/yogita/Documents/reactrepo1/src/FetchData.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction FetchData()\n{\n    const [data,setData]=useState([]);\n   let  url='https://jsonplaceholder.typicode.com/posts';\nfetch(url).then(response=>response.json()).then(fetchData=>setData(fetchData));\nreturn(\n    <>\n    <table>\n        <tr>\n            <th>ID</th>\n            <th>TITLE</th>\n            <th>BODY</th>\n        </tr>\n        <tr>\n            <>\n            {\n            data.map((filtered)=>\n            <tr>\n                <td>{filtered.id}</td>\n                <td>{filtered.title}</td>\n                <td>{filtered.body}</td>\n            </tr>\n                \n\n            )\n}\n            </>\n\n        </tr>\n    </table>\n    </>\n)\n\n}\n\nexport default FetchData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,SAASA,CAAA,EAClB;EAAAC,EAAA;EACI,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EAClC,IAAKS,GAAG,GAAC,4CAA4C;EACxDC,KAAK,CAACD,GAAG,CAAC,CAACE,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACG,SAAS,IAAEN,OAAO,CAACM,SAAS,CAAC,CAAC;EAC9E,oBACIZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,eACAb,OAAA;MAAAa,QAAA,gBACIb,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACXjB,OAAA;UAAAa,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACdjB,OAAA;UAAAa,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ,eACLjB,OAAA;QAAAa,QAAA,eACIb,OAAA,CAAAE,SAAA;UAAAW,QAAA,EAEAR,IAAI,CAACa,GAAG,CAAEC,QAAQ,iBAClBnB,OAAA;YAAAa,QAAA,gBACIb,OAAA;cAAAa,QAAA,EAAKM,QAAQ,CAACC;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACtBjB,OAAA;cAAAa,QAAA,EAAKM,QAAQ,CAACE;YAAK;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM,eACzBjB,OAAA;cAAAa,QAAA,EAAKM,QAAQ,CAACG;YAAI;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,QAAM;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QACvB;QAGJ;MAEE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEF;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD,iBACL;AAGP;AAACb,EAAA,CAjCQD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAmClB,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}