{"ast":null,"code":"var _jsxFileName = \"/home/yogita/Documents/reactrepo1/src/Postreq.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Postreq() {\n  _s();\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n  const [data, setData] = useState([]);\n  const data1 = {\n    \"userId\": 11,\n    \"id\": 101,\n    \"title\": \"1111111111111111\",\n    \"body\": \"1212121212122222\"\n  };\n  const params = {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data1)\n  };\n  fetch(url, params).then(response => response.json()).then(data => console.log(data), setData(data));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"TITLE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"BODY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: data.map(filtered => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: filtered.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: filtered.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: filtered.body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, this))\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Postreq, \"ZhdFFZzxrIZ1AkLU34uuoZfaEnY=\");\n_c = Postreq;\nexport default Postreq;\nvar _c;\n$RefreshReg$(_c, \"Postreq\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Postreq","_s","url","data","setData","data1","params","method","headers","body","JSON","stringify","fetch","then","response","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","map","filtered","id","title","_c","$RefreshReg$"],"sources":["/home/yogita/Documents/reactrepo1/src/Postreq.js"],"sourcesContent":["import React, { useState } from \"react\";\n \nfunction Postreq()\n{\n    const url='https://jsonplaceholder.typicode.com/posts';\n    const [data,setData]=useState([])\n    const data1={\"userId\":11,\"id\":101,\"title\":\"1111111111111111\",\"body\":\"1212121212122222\"};\n   const params={\n          method:'post',\n          headers:{\n            'Content-Type':'application/json'\n          },\n          body:JSON.stringify(data1),\n    }\n    fetch(url,params).then(response=>response.json()).then(data=>console.log(data),setData(data));\n    return(\n        <>\n        <table>\n            <tr>\n                <th>ID</th>\n                <th>TITLE</th>\n                <th>BODY</th>\n            </tr>\n                <>\n                {\n                data.map((filtered)=>\n                <tr>\n                    <td>{filtered.id}</td>\n                    <td>{filtered.title}</td>\n                    <td>{filtered.body}</td>\n                </tr>\n                    \n    \n                )\n    }\n                </>\n    \n            \n        </table>\n        </>\n    )\n\n\n\n}\nexport default Postreq;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,SAASC,OAAOA,CAAA,EAChB;EAAAC,EAAA;EACI,MAAMC,GAAG,GAAC,4CAA4C;EACtD,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACT,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAMU,KAAK,GAAC;IAAC,QAAQ,EAAC,EAAE;IAAC,IAAI,EAAC,GAAG;IAAC,OAAO,EAAC,kBAAkB;IAAC,MAAM,EAAC;EAAkB,CAAC;EACxF,MAAMC,MAAM,GAAC;IACNC,MAAM,EAAC,MAAM;IACbC,OAAO,EAAC;MACN,cAAc,EAAC;IACjB,CAAC;IACDC,IAAI,EAACC,IAAI,CAACC,SAAS,CAACN,KAAK;EAC/B,CAAC;EACDO,KAAK,CAACV,GAAG,EAACI,MAAM,CAAC,CAACO,IAAI,CAACC,QAAQ,IAAEA,QAAQ,CAACC,IAAI,EAAE,CAAC,CAACF,IAAI,CAACV,IAAI,IAAEa,OAAO,CAACC,GAAG,CAACd,IAAI,CAAC,EAACC,OAAO,CAACD,IAAI,CAAC,CAAC;EAC7F,oBACIN,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACArB,OAAA;MAAAqB,QAAA,gBACIrB,OAAA;QAAAqB,QAAA,gBACIrB,OAAA;UAAAqB,QAAA,EAAI;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACXzB,OAAA;UAAAqB,QAAA,EAAI;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACdzB,OAAA;UAAAqB,QAAA,EAAI;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACZ,eACDzB,OAAA,CAAAE,SAAA;QAAAmB,QAAA,EAEAf,IAAI,CAACoB,GAAG,CAAEC,QAAQ,iBAClB3B,OAAA;UAAAqB,QAAA,gBACIrB,OAAA;YAAAqB,QAAA,EAAKM,QAAQ,CAACC;UAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACtBzB,OAAA;YAAAqB,QAAA,EAAKM,QAAQ,CAACE;UAAK;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACzBzB,OAAA;YAAAqB,QAAA,EAAKM,QAAQ,CAACf;UAAI;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACvB;MAGJ,iBAEE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAGH,iBACL;AAKX;AAACrB,EAAA,CA1CQD,OAAO;AAAA2B,EAAA,GAAP3B,OAAO;AA2ChB,eAAeA,OAAO;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}