{"ast":null,"code":"var _jsxFileName = \"/home/yogita/Documents/reactrepo1/src/Postreq1.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Postreq1() {\n  _s();\n  const [id, setId] = useState(0);\n  const [title, setTitle] = useState(\"\");\n  const [body, setBody] = useState(\"\");\n  const addData = () => {\n    const params = {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        id,\n        title,\n        body\n      })\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', params).then(res => res.json()).then(() => console.log('response' + id + title + body));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"POST REQUEST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), \"ID\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: id,\n      onClick: e => setId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 75\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 80\n    }, this), \"TITLE\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: title,\n      onClick: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 84\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 89\n    }, this), \"BODY\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: body,\n      onClick: e => setBody(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 81\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      onClick: () => addData()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Postreq1, \"5JlMIwA1gFZ2JwzT6UbeaB5uZs0=\");\n_c = Postreq1;\nexport default Postreq1;\nvar _c;\n$RefreshReg$(_c, \"Postreq1\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Postreq1","_s","id","setId","title","setTitle","body","setBody","addData","params","method","headers","JSON","stringify","fetch","then","res","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onClick","e","target","_c","$RefreshReg$"],"sources":["/home/yogita/Documents/reactrepo1/src/Postreq1.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction Postreq1()\n{\n    const [id,setId]=useState(0);\n    const  [title,setTitle]=useState(\"\");\n    const [body,setBody]=useState(\"\");\n    const addData=()=>{\n        const params={\n            method:'post',\n            headers:{'Content-Type':'application/json'},\n            body:JSON.stringify({id,title,body}),\n\n        }\n        fetch('https://jsonplaceholder.typicode.com/posts',params).then(res=>res.json()).then(()=>console.log('response'+id+title+body));\n\n    }\n    \nreturn (\n    <>\n    <h2>POST REQUEST</h2>\n    ID<input type=\"text\" value={id} onClick={(e)=>setId(e.target.value)}/><br/><br/>\n    TITLE<input type=\"text\" value={title} onClick={(e)=>setTitle(e.target.value)}/><br/><br/>\n    BODY<input type=\"text\" value={body} onClick={(e)=>setBody(e.target.value)}/><br/><br/>\n    <input type=\"button\" onClick={()=>addData()}/>\n    </>\n)\n\n}\nexport default Postreq1;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}